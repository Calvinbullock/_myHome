
# Read `man 5 sway` for a complete reference.

# ============================================================================ #
#- Variables
#
# ============================================================================ #

# Logo key. Use Mod1 for Alt.
set $mod Mod1
set $super Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wmenu | xargs swaymsg exec --

# colours
set $rosewater #f5e0dc
set $flamingo  #f2cdcd
set $pink      #f5c2e7
set $mauve     #cba6f7
set $red       #f38ba8
set $maroon    #eba0ac
set $peach     #fab387
set $yellow    #f9e2af
set $green     #a6e3a1
set $teal      #94e2d5
set $sky       #89dceb
set $sapphire  #74c7ec
set $blue      #89b4fa
set $lavender  #b4befe
set $text      #cdd6f4
set $subtext1  #bac2de
set $subtext0  #a6adc8
set $overlay2  #9399b2
set $overlay1  #7f849c
set $overlay0  #6c7086
set $surface2  #585b70
set $surface1  #45475a
set $surface0  #313244
set $base      #1e1e2e
set $mantle    #181825
set $crust     #11111b

include /etc/sway/config-vars.d/*


# ============================================================================ #
#- Output configuration
#
# ============================================================================ #

# =========== #
# WALLPAPERS: #
# =========== #
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-根暗_Neko-Rain-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Char-CarTrip_DANGERDROP-PIXIV_waifu2x-2.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-碧狗_Blue-Flowers_upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-Dity-Pretty_Subway-Vibe-upscaled.png fill

    #output * bg ~/Pictures/_wallpapers/fav-imgs/bg_Wallheaven_train_horizen.jpg fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Catppuccin-Ascii-cat-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Char_night_crane.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Char-Pink-Splash.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/EightySix_Memory.jpg fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/iterm-hacker-waifu-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Linux-pengi.jpg fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Miku-Cyber-Screens.jpg fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Miku_deepsee_floating.png fill
    output * bg ~/Pictures/_wallpapers/fav-imgs/Miku_gift.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Miku_Night-exspanse_pixiv-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Miku-Shadow-Ink_Pixiv-奇诺777_upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-DANGERDROP_Daily-Mail-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-LeIsT0_Pink-Girl-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-RisLA_Miku-City-Ledge-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-RisLA_Miku-Cyber-City-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-RisLA_Miku-Pink-Tint-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-Useless_Gup-StuG-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-ど〜ら_Eurupe-walk_upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-奇诺777_Holo-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-奇诺777_Miku-Cyber-Punk-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/Pixiv-根暗_Colour-Smoke-upscaled.png fill
    #output * bg ~/Pictures/_wallpapers/fav-imgs/PIxiv-根暗_Violet-RoofTops-upscaled.png fill
    
    #__Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
    # output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill # DEFAULT wallpaper

# ======== #
# Display: #
# ======== #
    ### Example configuration:
    # You can get the names of your outputs by running: swaymsg -t get_outputs
    #
    # output HDMI-A-1 resolution 1920x1080 position 1920,0

# =================== #
# Idle configuration: #
# =================== #
    ### Example configuration:
    #
    # exec swayidle -w \
    #          timeout 300 'swaylock -f -c 000000' \
    #          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
    #          before-sleep 'swaylock -f -c 000000'
    #
    # This will lock your screen after 300 seconds of inactivity, then turn off
    # your displays after another 300 seconds, and turn your screens back on when
    # resumed. It will also lock your screen before your computer goes to sleep.

# ================ #
# Boarders config: #
# ================ #
    bindsym $mod+g border toggle
    #window title off
    
    titlebar_border_thickness 0
    titlebar_padding 4 1
    
    default_border pixel 3
    gaps inner 4

    # target                 title     bg    text      indicator    border
    client.focused           $mantle   $mauve $mantle  $rosewater $pink
    client.focused_inactive  $overlay0 $base  $text    $rosewater $overlay0
    client.unfocused         $overlay0 $base  $text    $rosewater $overlay0
    client.urgent            $peach    $base  $peach   $overlay0  $peach
    client.placeholder       $overlay0 $base  $text    $overlay0  $overlay0
    client.background        $base

# ============================================================================ #
#- Input configuration
#
# ============================================================================ #

# ====== #
# Input: #
# ====== #
    # Example configuration:
    #
    #   input "2:14:SynPS/2_Synaptics_TouchPad" {
    #       dwt enabled
    #       tap enabled
    #       natural_scroll enabled
    #       middle_emulation enabled
    #   }
    #
    # You can get the names of your inputs by running: swaymsg -t get_inputs
    # Read `man 5 sway-input` for more information about this section.
    
    # Use capslock key as secondary escape
    input "type:keyboard" {
        xkb_options caps:escape
    }


# ============================================================================ #
#- Key bindings
#
# ============================================================================ #

# ======= #
# Basics: #
# ======= #
    # Start a terminal
    bindsym $mod+t exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $super+m exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $super normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# ===================== #
# screenshot shortcuts: #
# ===================== #
    # Current Workspace
    bindsym Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') && notify-send "grim - Screenshot taken"
    # Selected Region
    bindsym Shift+Print exec grim -g "$(slurp)" && notify-send "grim - Screenshot taken"
    # Current Window
    bindsym $mod+Print exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" && notify-send "grim - Screenshot taken of window"

# ============== #
# Moving around: #
# ============== #
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # alt tab
    bindsym Mod1+Tab workspace next_on_output

# =========== #
# Workspaces: #
# =========== #
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# ============= #
# Layout stuff: #
# ============= #
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# =========== #
# Scratchpad: #
# =========== #
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# ==================== #
# Resizing containers: #
# ==================== #
    mode "resize" {
        bindsym $left resize shrink width 10px
        bindsym $down resize grow height 10px
        bindsym $up resize shrink height 10px
        bindsym $right resize grow width 10px
    
        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px
    
        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+r mode "resize"


# ============================================================================ #
#- Status Bar:
#
# ============================================================================ #

# ========= #
# Stat Bar: #
# ========= #
    # Read `man 5 sway-bar` for more information about this section.
    bar {
        swaybar_command waybar
    
        position top

        # When the status_command prints a new line to stdout, swaybar updates.
        # The default just shows the current date and time.
        status_command while date +'%Y-%m-%d %X'; do sleep 1; done

        colors {
            statusline #ffffff
            background #323232
            inactive_workspace #32323200 #32323200 #5c5c5c
        }
    }

include /etc/sway/config.d/*



